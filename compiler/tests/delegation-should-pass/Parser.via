/* Parser test. Try to hit all syntactic forms. */
/* TODO: try to bring back asserts. */
/* TODO: I'm not sure about this file. We should break it down into smaller tests. */
process main {
  var a: int;
  var b: bool{bB};

  val a2: int{aA} = (22 - 1) * 2;
  val b2: bool = true || false;

  /* assert a2 == 42; */
  /* assert b2; */

  a = -a2;
  b = !b2;

  /* assert a == -42; */
  /* assert !b; */

  /* Check that variables in blocks go out of scope */
  {
    var tmp: int{cC} = 5;
  }
  var tmp: bool{aA & bB->} = a2 > a;
  /* assert tmp; */

  /* Communication */
  var tmp1: int;
  tmp1 = input int from alice;
  val tmp2: bool = input bool from alice;
  /* assert tmp1 == 5; */
  /* assert !tmp2; */

  output 42 to alice;
}

process Host(alice) {
  send 5 to main;
  send false to main;
  val result: int = receive int from main;
  assert result == 42;
}

principals: aA, bB, cC
hosts: trusted, alice
assume: trusted => aA & bB & cC, alice <=> aA
