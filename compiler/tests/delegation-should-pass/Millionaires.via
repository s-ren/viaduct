/* The classic MPC problem. */
process main {
  /* Alice and Bob are free to provide any input; we'll just trust it. */
  val a: int{alice} = endorse input int from alice to {alice} from {alice};
  val b: int{bob} = endorse input int from bob to {bob} from {bob};
    /* why endorse? */
  var bob_richer : bool{alice & bob} = false;
  if (a <= b) {
    bob_richer = true;
  }

  val bob_richer_decl : bool = declassify bob_richer to {(alice | bob)-> & (alice & bob)<-};
  output bob_richer_decl to alice;
  output bob_richer_decl to bob;
}

process Host(alice) {
  send 20 to main;
  val bob_richer: bool = receive bool from main;
}

process Host(bob) {
  send 40 to main;
  val bob_richer: bool = receive bool from main;
  assert bob_richer;
}

hosts: alice, bob;
assume: alice<- <=> bob<-;
